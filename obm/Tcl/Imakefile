XCOMM  Imakefile for maintaining Tcl in the Object Manager library.
XCOMM  05-Sep-93, Doug Tody NOAO/IRAF.
XCOMM  28-Aug-96, Mike Fitzpatrick NOAO/IRAF.	(Revised)

X11IRAFDIR = ../../
#include <../../X11IRAF.tmpl>

XCOMM ------------------ BEGIN TCL DEFINITIONS ----------------------

    TCL_LIBRARY = /usr/local/lib/tcl
        SRC_DIR = .


#if defined(MacIIArchitecture)
XCOMM - The following are for Macintosh A/UX 
      GCC_FLAGS = -w -Wunused -traditional
       AC_FLAGS = -DHAVE_UNISTD_H=1 -DNO_STDLIB_H=1 -DNO_STRING_H=1 \
                  -DNEED_MATHERR=1
    COMPAT_OBJS = strerror.o strtoul.o tclMtherr.o
#else

#if defined(PpcDarwinArchitecture) || defined (TenonServer)
XCOMM - The following are for OS X on a PowerPC
#if ((OSMajorVersion == 10) && (OSMinorVersion < 4))
      CPP_FLAGS = -traditional-cpp
#else
      CPP_FLAGS = 
#endif
      GCC_FLAGS = -DNOSTDHDRS -DSYSV -DANSI -D_BSD_SOURCE -W \
		  $(CPP_FLAGS) -fstrength-reduce -fpcc-struct-return
       AC_FLAGS = $(CPP_FLAGS) -DHAVE_UNISTD_H=1
         CFLAGS += $(CPP_FLAGS) -I. $(AC_FLAGS) $(GCC_FLAGS)
    COMPAT_OBJS =
#else

#if defined(SunArchitecture) && (OSMajorVersion <= 4)
XCOMM - The following are for SunOS
      GCC_FLAGS = 
       AC_FLAGS = -DHAVE_UNISTD_H=1 -DNO_FLOAT_H=1 -DNO_STDLIB_H=1 \
                  -DNO_STRING_H=1 -DNEED_MATHERR=1
    COMPAT_OBJS = strerror.o strtoul.o tclMtherr.o
#else

#if defined(SunArchitecture) && !defined (i386Architecture)
XCOMM - The following are for SunSoft/Solaris
# Hack to compile under SunPRO V4 on Solaris
        CCOPTIONS = -Xs
  EXTRA_LDOPTIONS = -xildoff
      GCC_FLAGS = 
       AC_FLAGS = -DNO_GETWD=1 -DNO_WAIT3=1 -DHAVE_UNISTD_H=1 \
		  -DNO_UNION_WAIT=1 -DNEED_MATHERR=1 -DUSE_STDARG
    COMPAT_OBJS = tclMtherr.o
#else

#if defined(SunArchitecture) && defined (i386Architecture)
XCOMM - The following are for Solaris x86
        CCOPTIONS =
  EXTRA_LDOPTIONS =
      GCC_FLAGS = 
       AC_FLAGS = -DNO_GETWD=1 -DNO_WAIT3=1 -DHAVE_UNISTD_H=1 \
		  -DNO_UNION_WAIT=1 -DNEED_MATHERR=1
    COMPAT_OBJS = tclMtherr.o
#else

#if defined(FreeBSDArchitecture)
XCOMM - The following are for FreeBSD
      GCC_FLAGS = -DNOSTDHDRS -DSYSV -DANSI -D_BSD_SOURCE -W \
		  -fstrength-reduce -fpcc-struct-return
       AC_FLAGS = -DHAVE_UNISTD_H=1
         CFLAGS += -I. $(AC_FLAGS) $(GCC_FLAGS)
    COMPAT_OBJS =
#else

#if defined(LinuxArchitecture)
XCOMM - The following are for Linux
      GCC_FLAGS = -DNOSTDHDRS -DSYSV -DANSI -D_BSD_SOURCE -W \
		  -fstrength-reduce -fpcc-struct-return
       AC_FLAGS = -DHAVE_UNISTD_H=1
    COMPAT_OBJS =
#else

#if defined(HPArchitecture)
XCOMM - The following are for HP-UX
      GCC_FLAGS = 
       AC_FLAGS = -DNO_GETWD=1 -DNO_WAIT3=1 -DHAVE_UNISTD_H=1 \
                  -DNO_UNION_WAIT=1 -DNEED_MATHERR=1
    COMPAT_OBJS = tclMtherr.o
#else

#if defined(OSF1Architecture)
XCOMM - The following are for OSF/1 on Alpha
      GCC_FLAGS =
       AC_FLAGS = -DHAVE_UNISTD_H=1 -DNO_UNION_WAIT=1 -DNEED_MATHERR=1
    COMPAT_OBJS = tclMtherr.o

#else

#if defined(RsArchitecture)
XCOMM - The following are for AIX on Rs/6000
      GCC_FLAGS =
       AC_FLAGS = -DHAVE_UNISTD_H=1 -DNO_UNION_WAIT=1 -DNEED_MATHERR=1
    COMPAT_OBJS = tclMtherr.o

#else
#if defined(cygwinArchitecture)

      GCC_FLAGS = -DUSE_STDARG
       AC_FLAGS = -DHAVE_UNISTD_H=1 -DNO_UNION_WAIT=1 -DNO_STDLIB_H=1
    COMPAT_OBJS =
#else

      GCC_FLAGS =
       AC_FLAGS =
    COMPAT_OBJS =
#endif
#endif
#endif
#endif
#endif
#endif
#endif
#endif
#endif
#endif
#endif


# Platform flags.
#if ((GccMajorVersion == 3) &&  (GccMinorVersion >= 1))
       PL_FLAGS = -DUSE_STDARG
#else
#if ((GccMajorVersion == 4))
       PL_FLAGS = -DUSE_STDARG
      CPP_FLAGS = -traditional-cpp
#else
       PL_FLAGS =
#endif
#endif


    DEPENDFLAGS = -I.. -I${SRC_DIR} ${AC_FLAGS} ${PL_FLAGS} 
      CCOPTIONS = -I.. -I${SRC_DIR} ${AC_FLAGS} ${PL_FLAGS} ${GCC_FLAGS} \
                  -DTCL_LIBRARY=\"${TCL_LIBRARY}\"

UNIX_OBJS = \
	panic.o tclEnv.o tclGlob.o tclMain.o tclUnixAZ.o \
	tclUnixStr.o tclUnixUtil.o

GENERIC_OBJS = \
	regexp.o tclAsync.o tclBasic.o tclCkalloc.o \
	tclCmdAH.o tclCmdIL.o tclCmdMZ.o tclExpr.o tclGet.o \
	tclHash.o tclHistory.o tclLink.o tclParse.o tclProc.o \
	tclUtil.o tclVar.o

TCL_OBJS = ${GENERIC_OBJS} ${UNIX_OBJS} ${COMPAT_OBJS}

XCOMM -------------------- END TCL DEFINITIONS ----------------------


HEADERS = patchlevel.h tclRegexp.h tcl.h tclInt.h tclUnix.h

SRCS =  panic.c regexp.c tclAppInit.c tclAsync.c tclBasic.c \
	tclCkalloc.c tclCmdAH.c tclCmdIL.c tclCmdMZ.c tclEnv.c \
	tclExpr.c tclGet.c tclGlob.c tclHash.c tclHistory.c \
	tclLink.c tclMain.c tclMtherr.c tclParse.c tclProc.c \
	tclTest.c tclUnixAZ.c tclUnixStr.c tclUnixUtil.c tclUtil.c \
	tclVar.c

OBJS = ${TCL_OBJS}

SubdirLibraryRule($(OBJS))

XCOMM ------------------ BEGIN TCL DEFINITIONS ----------------------
getcwd.o: $(SRC_DIR)/compat/getcwd.c
	$(CC) -c $(CCOPTIONS) $(SRC_DIR)/compat/getcwd.c

opendir.o: $(SRC_DIR)/compat/opendir.c
	$(CC) -c $(CCOPTIONS) $(SRC_DIR)/compat/opendir.c

strerror.o: $(SRC_DIR)/compat/strerror.c
	$(CC) -c $(CCOPTIONS) $(SRC_DIR)/compat/strerror.c

strstr.o: $(SRC_DIR)/compat/strstr.c
	$(CC) -c $(CCOPTIONS) $(SRC_DIR)/compat/strstr.c

strtod.o: $(SRC_DIR)/compat/strtod.c
	$(CC) -c $(CCOPTIONS) $(SRC_DIR)/compat/strtod.c

strtol.o: $(SRC_DIR)/compat/strtol.c
	$(CC) -c $(CCOPTIONS) $(SRC_DIR)/compat/strtol.c

strtoul.o: $(SRC_DIR)/compat/strtoul.c
	$(CC) -c $(CCOPTIONS) $(SRC_DIR)/compat/strtoul.c

tmpnam.o: $(SRC_DIR)/compat/tmpnam.c
	$(CC) -c $(CCOPTIONS) $(SRC_DIR)/compat/tmpnam.c

waitpid.o: $(SRC_DIR)/compat/waitpid.c
	$(CC) -c $(CCOPTIONS) $(SRC_DIR)/compat/waitpid.c
XCOMM -------------------- END TCL DEFINITIONS ----------------------


NormalLintTarget($(SRCS))
LintLibraryTarget(ar,$(SRCS))

includes::
	MakeDir(X11irafIncDir/Tcl)
	@(set -x; for i in $(HEADERS); do \
		$(RM) X11irafIncDir/Tcl/$$i; \
		$(CP) -p ObmDir/Tcl/$$i X11irafIncDir/Tcl/$$i; \
	done)

#if InstallIncludes
install::
	@(set -x; for i in $(HEADERS); do \
		$(RM) X11irafIncDir/Tcl/$$i; \
	done)
	for i in $(HEADERS); do \
	    (set -x; $(CP) -p $$i X11irafIncDir/Tcl/); \
	done
#endif    

DependTarget()

